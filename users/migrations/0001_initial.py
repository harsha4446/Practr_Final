# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-23 18:04
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=200)),
                ('phoneno', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('activated', models.BooleanField(default=False)),
                ('judge', models.BooleanField(default=False)),
                ('college', models.BooleanField(default=False)),
                ('club', models.BooleanField(default=False)),
                ('about', models.CharField(blank=True, default='', max_length=500)),
                ('dob', models.DateField(default=datetime.date.today)),
                ('experience', models.PositiveSmallIntegerField(default=0)),
                ('location', models.CharField(blank=True, choices=[('Bangalore', 'Bangalore'), ('Mysore', 'Mysore')], default='', max_length=100)),
                ('profile_picture', models.ImageField(blank=True, default='default/new_logo.png', null=True, upload_to=users.models.upload_loction)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='clubs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Dummy', max_length=100)),
                ('college', models.CharField(default='', max_length=150)),
                ('admin_name', models.CharField(default='', max_length=100)),
                ('club_email', models.CharField(default='', max_length=100, unique=True)),
                ('phone', models.CharField(default='', max_length=10)),
                ('video', models.CharField(default='', max_length=250)),
                ('website', models.CharField(default='', max_length=250)),
                ('about', models.CharField(default='', max_length=400)),
                ('logo', models.ImageField(blank=True, default='default/club_default.jpg', null=True, upload_to=users.models.upload_loction)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='event_registered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='event_registered_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketing', models.BooleanField(default=0)),
                ('finance', models.BooleanField(default=0)),
                ('public_relations', models.BooleanField(default=0)),
                ('best_manager', models.BooleanField(default=0)),
                ('ent_dev', models.BooleanField(default=0)),
                ('human_resources', models.BooleanField(default=0)),
                ('rcode', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('live', models.BooleanField(default=False)),
                ('registration', models.BooleanField(default=False)),
                ('about', models.CharField(default='', max_length=400)),
                ('website', models.CharField(default='', max_length=250)),
                ('logo', models.ImageField(blank=True, default='default/club_default.jpg', null=True, upload_to=users.models.upload_loction)),
                ('inter_type', models.BooleanField(default=False)),
                ('marketing', models.BooleanField(default=False)),
                ('team_size1', models.IntegerField(default=1)),
                ('subhead1', models.BooleanField(default=False)),
                ('quota11', models.IntegerField(default=100)),
                ('quota12', models.IntegerField(default=100)),
                ('quota13', models.IntegerField(default=100)),
                ('registered11', models.IntegerField(default=0)),
                ('registered12', models.IntegerField(default=0)),
                ('registered13', models.IntegerField(default=0)),
                ('finance', models.BooleanField(default=False)),
                ('subhead2', models.BooleanField(default=False)),
                ('team_size2', models.IntegerField(default=1)),
                ('quota21', models.IntegerField(default=100)),
                ('quota22', models.IntegerField(default=100)),
                ('quota23', models.IntegerField(default=100)),
                ('registered21', models.IntegerField(default=0)),
                ('registered22', models.IntegerField(default=0)),
                ('registered23', models.IntegerField(default=0)),
                ('public_relations', models.BooleanField(default=False)),
                ('subhead3', models.BooleanField(default=False)),
                ('team_size3', models.IntegerField(default=1)),
                ('quota31', models.IntegerField(default=100)),
                ('quota32', models.IntegerField(default=100)),
                ('quota33', models.IntegerField(default=100)),
                ('registered31', models.IntegerField(default=0)),
                ('registered32', models.IntegerField(default=0)),
                ('registered33', models.IntegerField(default=0)),
                ('human_resources', models.BooleanField(default=False)),
                ('subhead4', models.BooleanField(default=False)),
                ('team_size4', models.IntegerField(default=1)),
                ('quota41', models.IntegerField(default=100)),
                ('quota42', models.IntegerField(default=100)),
                ('quota43', models.IntegerField(default=100)),
                ('registered41', models.IntegerField(default=0)),
                ('registered42', models.IntegerField(default=0)),
                ('registered43', models.IntegerField(default=0)),
                ('ent_dev', models.BooleanField(default=False)),
                ('subhead5', models.BooleanField(default=False)),
                ('team_size5', models.IntegerField(default=1)),
                ('quota51', models.IntegerField(default=100)),
                ('quota52', models.IntegerField(default=100)),
                ('quota53', models.IntegerField(default=100)),
                ('registered51', models.IntegerField(default=0)),
                ('registered52', models.IntegerField(default=0)),
                ('registered53', models.IntegerField(default=0)),
                ('best_manager', models.BooleanField(default=False)),
                ('subhead6', models.BooleanField(default=False)),
                ('team_size6', models.IntegerField(default=1)),
                ('quota61', models.IntegerField(default=100)),
                ('quota62', models.IntegerField(default=100)),
                ('quota63', models.IntegerField(default=100)),
                ('registered61', models.IntegerField(default=0)),
                ('registered62', models.IntegerField(default=0)),
                ('registered63', models.IntegerField(default=0)),
                ('current', models.BooleanField(default=True)),
                ('multiregistration', models.BooleanField(default=False)),
                ('firstyear', models.BooleanField(default=True)),
                ('secondyear', models.BooleanField(default=True)),
                ('thirdyear', models.BooleanField(default=True)),
                ('prefix', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('tprefix', models.CharField(blank=True, default='', max_length=4, null=True)),
                ('email', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.clubs')),
            ],
        ),
        migrations.CreateModel(
            name='follow_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='register_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='room_judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('judge_email', models.CharField(default='', max_length=100)),
                ('judge_password', models.CharField(default='', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='round_room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='round_scores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question1', models.IntegerField(blank=True, default=0, null=True)),
                ('question2', models.IntegerField(blank=True, default=0, null=True)),
                ('question3', models.IntegerField(blank=True, default=0, null=True)),
                ('question4', models.IntegerField(blank=True, default=0, null=True)),
                ('question5', models.IntegerField(blank=True, default=0, null=True)),
                ('creativity', models.IntegerField(blank=True, default=0, null=True)),
                ('content', models.IntegerField(blank=True, default=0, null=True)),
                ('presentation', models.IntegerField(blank=True, default=0, null=True)),
                ('rebuttal', models.IntegerField(blank=True, default=0, null=True)),
                ('communication', models.IntegerField(blank=True, default=0, null=True)),
                ('feasibility', models.IntegerField(blank=True, default=0, null=True)),
                ('feedback', models.CharField(default='Not Available', max_length=600, null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('judged', models.BooleanField(default=False)),
                ('data1', models.FileField(null=True, upload_to=users.models.round_data)),
                ('data2', models.FileField(null=True, upload_to=users.models.round_data)),
                ('data3', models.FileField(null=True, upload_to=users.models.round_data)),
                ('total', models.IntegerField(default=0)),
                ('qualified', models.BooleanField(default=False)),
                ('rcode', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='rounds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_judge', models.BooleanField(default=False)),
                ('title', models.CharField(default='', max_length=150)),
                ('sub_title', models.CharField(blank=True, default='', max_length=150)),
                ('about', models.CharField(blank=True, default='', max_length=400)),
                ('task1', models.CharField(blank=True, default='', max_length=150)),
                ('task2', models.CharField(blank=True, default='', max_length=150)),
                ('tast3', models.CharField(blank=True, default='', max_length=150)),
                ('task4', models.CharField(blank=True, default='', max_length=150)),
                ('task5', models.CharField(blank=True, default='', max_length=150)),
                ('resource1', models.CharField(blank=True, default='', max_length=150)),
                ('resource2', models.CharField(blank=True, default='', max_length=150)),
                ('resource3', models.CharField(blank=True, default='', max_length=150)),
                ('resource4', models.CharField(blank=True, default='', max_length=150)),
                ('resource5', models.CharField(blank=True, default='', max_length=150)),
                ('resource1data', models.FileField(blank=True, null=True, upload_to=users.models.round_data)),
                ('resource2data', models.FileField(blank=True, null=True, upload_to=users.models.round_data)),
                ('resource3data', models.FileField(blank=True, null=True, upload_to=users.models.round_data)),
                ('resource4data', models.FileField(blank=True, null=True, upload_to=users.models.round_data)),
                ('resource5data', models.FileField(blank=True, null=True, upload_to=users.models.round_data)),
                ('creativity', models.BooleanField(default=False)),
                ('content', models.BooleanField(default=False)),
                ('presentation', models.BooleanField(default=False)),
                ('rebuttal', models.BooleanField(default=False)),
                ('communication', models.BooleanField(default=False)),
                ('feasibility', models.BooleanField(default=False)),
                ('feedback', models.BooleanField(default=False)),
                ('question1', models.CharField(blank=True, default='', max_length=150)),
                ('core1', models.IntegerField(choices=[(1, 'Marketing'), (2, 'Finance'), (3, 'Public Relations'), (4, 'Human Resources'), (5, 'Entrpreneur and Development'), (6, 'Best Manager')], default=1, null=True)),
                ('question2', models.CharField(blank=True, default='', max_length=150)),
                ('core2', models.IntegerField(choices=[(1, 'Marketing'), (2, 'Finance'), (3, 'Public Relations'), (4, 'Human Resources'), (5, 'Entrpreneur and Development'), (6, 'Best Manager')], default=1, null=True)),
                ('question3', models.CharField(blank=True, default='', max_length=150)),
                ('core3', models.IntegerField(choices=[(1, 'Marketing'), (2, 'Finance'), (3, 'Public Relations'), (4, 'Human Resources'), (5, 'Entrpreneur and Development'), (6, 'Best Manager')], default=1, null=True)),
                ('question4', models.CharField(blank=True, default='', max_length=150)),
                ('core4', models.IntegerField(choices=[(1, 'Marketing'), (2, 'Finance'), (3, 'Public Relations'), (4, 'Human Resources'), (5, 'Entrpreneur and Development'), (6, 'Best Manager')], default=1, null=True)),
                ('question5', models.CharField(blank=True, default='', max_length=150)),
                ('core5', models.IntegerField(choices=[(1, 'Marketing'), (2, 'Finance'), (3, 'Public Relations'), (4, 'Human Resources'), (5, 'Entrpreneur and Development'), (6, 'Best Manager')], default=1, null=True)),
                ('type', models.IntegerField(default=0)),
                ('created', models.DateField(default=datetime.date.today)),
                ('published', models.BooleanField(default=False)),
                ('team_size', models.IntegerField(default=1)),
                ('deadline', models.DateTimeField(default=None, null=True)),
                ('creativityvalue', models.IntegerField(default=0)),
                ('contentvalue', models.IntegerField(default=0)),
                ('presentationvalue', models.IntegerField(default=0)),
                ('rebuttalvalue', models.IntegerField(default=0)),
                ('communicationvalue', models.IntegerField(default=0)),
                ('feasibilityvalue', models.IntegerField(default=0)),
                ('qualified', models.IntegerField(default=2)),
                ('weight', models.FloatField(default=1.0)),
                ('finished', models.BooleanField(default=False)),
                ('enddate', models.DateField(default=None, null=True)),
                ('author', models.CharField(default=0, max_length=100)),
                ('offline', models.BooleanField(default=False)),
                ('club', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.clubs')),
                ('email', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.events')),
            ],
        ),
        migrations.CreateModel(
            name='student_scores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creativity', models.IntegerField(default=1)),
                ('content', models.IntegerField(default=1)),
                ('presentation', models.IntegerField(default=1)),
                ('rebuttal', models.IntegerField(default=1)),
                ('communication', models.IntegerField(default=1)),
                ('feasibility', models.IntegerField(default=1)),
                ('question1', models.IntegerField(blank=True, default=0)),
                ('question2', models.IntegerField(blank=True, default=0)),
                ('question3', models.IntegerField(blank=True, default=0)),
                ('question4', models.IntegerField(blank=True, default=0)),
                ('question5', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='sub_head',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='colleges',
            fields=[
                ('email', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', models.CharField(default='', max_length=350)),
                ('college_name', models.CharField(choices=[('Christ University B.COM', 'Christ University B.COM'), ('Christ University D.M.S', 'Christ University D.M.S'), ('Christ University D.P.S', 'Christ University D.P.S'), ('Jain University SCS', 'Jain University SCS'), ('Jain University CMS', 'Jain University CMS'), ('Mount Carmel B.COM', 'Mount Carmel B.COM'), ('Mount Carmel BBA', 'Mount Carmel BBA'), ('St.Josephs B.COM', 'St.Josephs B.COM')], default='', max_length=200)),
                ('phone', models.CharField(default='', max_length=10)),
                ('logo', models.ImageField(blank=True, default='default/new_logo.png', null=True, upload_to=users.models.upload_loction)),
            ],
        ),
        migrations.CreateModel(
            name='interests',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('label', models.CharField(default='', max_length=50)),
                ('marketing', models.BooleanField(default=False)),
                ('finance', models.BooleanField(default=False)),
                ('public_relations', models.BooleanField(default=False)),
                ('human_resources', models.BooleanField(default=False)),
                ('ent_dev', models.BooleanField(default=False)),
                ('best_manager', models.BooleanField(default=False)),
                ('rcode', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='judge_detail',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type', models.IntegerField(default=0)),
                ('degree', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('website', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('industry_exp', models.IntegerField(default=0)),
                ('college', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('club', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.clubs')),
            ],
        ),
        migrations.CreateModel(
            name='student_detail',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('label', models.CharField(default='', max_length=50)),
                ('degree', models.CharField(choices=[('B.COM', 'B.COM'), ('BBA', 'BBA')], default='', max_length=100)),
                ('college', models.CharField(default='', max_length=150)),
                ('year', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], default='First', max_length=10)),
                ('section', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='sub_head',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='student_scores',
            name='username',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='round_scores',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_score', to='users.rounds'),
        ),
        migrations.AddField(
            model_name='round_scores',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='round_room',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.rounds'),
        ),
        migrations.AddField(
            model_name='room_judge',
            name='room',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.round_room'),
        ),
        migrations.AddField(
            model_name='room_judge',
            name='round',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.rounds'),
        ),
        migrations.AddField(
            model_name='register_table',
            name='current_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='register_table',
            name='registered_to',
            field=models.ManyToManyField(to='users.clubs'),
        ),
        migrations.AddField(
            model_name='follow_table',
            name='connected_to',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='follow_table',
            name='current_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event_registered_details',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.events'),
        ),
        migrations.AddField(
            model_name='event_registered_details',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event_registered',
            name='current_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event_registered',
            name='registered_to',
            field=models.ManyToManyField(to='users.events'),
        ),
        migrations.AddField(
            model_name='clubs',
            name='email',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='users.colleges'),
        ),
    ]
